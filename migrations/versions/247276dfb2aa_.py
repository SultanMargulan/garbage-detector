"""empty message

Revision ID: 247276dfb2aa
Revises: 
Create Date: 2025-04-22 23:30:14.565264

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '247276dfb2aa'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # Create mission table without foreign key
    op.create_table('mission',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('drone_id', sa.Integer(), nullable=False),  # No FK yet
        sa.Column('start_time', sa.DateTime(), nullable=True),
        sa.Column('end_time', sa.DateTime(), nullable=True),
        sa.Column('status', sa.String(length=20), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    
    # Create drone table without foreign key
    op.create_table('drone',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=50), nullable=False),
        sa.Column('status', sa.String(length=20), nullable=True),
        sa.Column('last_mission_id', sa.Integer(), nullable=True),  # No FK yet
        sa.PrimaryKeyConstraint('id')
    )
    
    # Add foreign key constraints after both tables exist
    op.create_foreign_key(
        'fk_mission_drone_id', 'mission', 'drone', ['drone_id'], ['id']
    )
    op.create_foreign_key(
        'fk_drone_last_mission_id', 'drone', 'mission', ['last_mission_id'], ['id']
    )
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('detection',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('class_name', sa.String(length=50), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('x_min', sa.Float(), nullable=False),
    sa.Column('y_min', sa.Float(), nullable=False),
    sa.Column('x_max', sa.Float(), nullable=False),
    sa.Column('y_max', sa.Float(), nullable=False),
    sa.Column('image_path', sa.String(length=255), nullable=True),
    sa.Column('detection_type', sa.String(length=20), nullable=False),
    sa.Column('session_id', sa.String(length=50), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('detection', schema=None) as batch_op:
        batch_op.create_index('idx_image_path', ['image_path'], unique=False)
        batch_op.create_index('idx_session', ['session_id'], unique=False)
        batch_op.create_index('idx_timestamp', ['timestamp'], unique=False)


    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(length=255), nullable=False),
    sa.Column('severity', sa.String(length=50), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('seen', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('report',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=50), nullable=False),
    sa.Column('total_detections', sa.Integer(), nullable=False),
    sa.Column('detected_objects', sa.JSON(), nullable=False),
    sa.Column('generated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('uav_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('battery', sa.Float(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('speed', sa.Float(), nullable=True),
    sa.Column('altitude', sa.Float(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    # ### end Alembic commands ###


def downgrade():
    # Drop foreign keys first
    op.drop_constraint('fk_drone_last_mission_id', 'drone', type_='foreignkey')
    op.drop_constraint('fk_mission_drone_id', 'mission', type_='foreignkey')
    
    # Drop tables in reverse order
    op.drop_table('users')
    op.drop_table('uav_status')
    op.drop_table('report')
    op.drop_table('notification')
    op.drop_table('detection')
    op.drop_table('drone')
    op.drop_table('mission')
